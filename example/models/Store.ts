// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { StaffId } from './Staff';
import type { AddressId } from './Address';
import { z } from 'zod';

/** Identifier type for store */
export type StoreId = number & { __flavor?: 'StoreId' };

/** Represents the table public.store */
export default interface Store {
  /** Database type: pg_catalog.int4 */
  store_id: StoreId;

  /** Database type: pg_catalog.int2 */
  manager_staff_id: StaffId;

  /** Database type: pg_catalog.int2 */
  address_id: AddressId;

  /** Database type: pg_catalog.timestamp */
  last_update: Date;
}

/** Represents the initializer for the table public.store */
export interface StoreInitializer {
  /**
   * Database type: pg_catalog.int4
   * Default value: nextval('store_store_id_seq'::regclass)
   */
  store_id?: StoreId;

  /** Database type: pg_catalog.int2 */
  manager_staff_id: StaffId;

  /** Database type: pg_catalog.int2 */
  address_id: AddressId;

  /**
   * Database type: pg_catalog.timestamp
   * Default value: now()
   */
  last_update?: Date;
}

/** Represents the mutator for the table public.store */
export interface StoreMutator {
  /** Database type: pg_catalog.int4 */
  store_id?: StoreId;

  /** Database type: pg_catalog.int2 */
  manager_staff_id?: StaffId;

  /** Database type: pg_catalog.int2 */
  address_id?: AddressId;

  /** Database type: pg_catalog.timestamp */
  last_update?: Date;
}

/** Zod schema for store */
export const store = z.object({
  store_id: z.number(),
  manager_staff_id: z.number(),
  address_id: z.number(),
  last_update: z.date(),
});
